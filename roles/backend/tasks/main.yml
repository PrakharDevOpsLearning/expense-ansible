- name: Disable node
  ansible.builtin.shell: dnf module disable nodejs -y

- name: Enable NodeJS module for V20
  ansible.builtin.shell: dnf module enable nodejs:20 -y

- name: Install Node js
  ansible.builtin.dnf:
    name: nodejs
    state: latest

- name: Adding user
  ansible.builtin.user:
    name: expense

- name: Copy backend service file
  ansible.builtin.template:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: Import application prerequisites
  ansible.builtin.import_role:
    name: common
    tasks_from: app-pre-req

- name: Npm Install
  community.general.npm:
    path: /app
    state: latest

#    - name: Install MySql
#      ansible.builtin.dnf:
#        name: mysql
#        state: latest

#- name: Install Python MySql Client
#  ansible.builtin.pip:
#    name:
#      - PyMySQL
#      - cryptography
#    executable: pip3.11

#- name: Add Schema
#  community.mysql.mysql_db:
#    name: all
#    state: import
#    target: /app/schema/backend.sql
#    login_user: root
#    login_password: ExpenseApp@1
#    login_host: mysql-dev.prakhardevopslearning.online



- name: install_my_sql
  ansible.builtin.shell: dnf install mysql -y

- name: load schema
  ansible.builtin.shell: mysql -h mysql-dev.prakhardevopslearning.online -uroot -pExpenseApp@1 < /app/schema/backend.sql


- name: Enable & Start backend Service
  ansible.builtin.systemd_service:
    state: restarted
    name: backend
    enabled: yes
    daemon_reload: yes


  #tags: mySql
  #we use tags when we jst want to run particular steps and command to run it is ansible-playbook -i inventory, -e ansible_user=username -e ansible_password=password filename.yml -t tagname

